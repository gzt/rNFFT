% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rNFFT.R
\name{ndft_1d}
\alias{ndft_1d}
\alias{nfft_1d}
\alias{nfft_adjoint_1d}
\alias{ndft_adjoint_1d}
\title{1-D NFFT}
\usage{
ndft_1d(x, f_hat)

nfft_1d(x, f_hat)

nfft_adjoint_1d(x, f, N)

ndft_adjoint_1d(x, f, N)
}
\arguments{
\item{x}{(real) vector of nodes of length \code{M}, must be in \code{[-0.5,0.5)}.}

\item{f_hat}{(complex) vector of \eqn{\hat{f}}{f_hat} entries -
(of length \code{N}) and length must be even.}

\item{f}{frequencies for adjoint, same length as \code{x}}

\item{N}{number of frequencies for transform, specified for adjoint.}
}
\value{
vector of \eqn{f}, the results of the transform (of length \code{M}).
}
\description{
1-D Non-Uniform Direct Fourier Tranform
}
\details{
The non-uniform Fourier transform takes non-uniform samples \eqn{x}
from the $d$-dimensional torus \eqn{[0.5,0.5)^d}.

The NDFT functions compute the Fourier transform directly. This is slow.
The NFFT functions use the FFT to compute this, which should be faster.
The adjoint, in this case, is not the same as the inverse. Solving the
inverse problem requires approximations. Here we present the 1D NDFT,
NFFT, and their adjoints. You most likely want to use the \code{nfft_1d}
and \code{nfft_adjoint_1d} functions rather than the \code{dft} functions.
}
\section{Functions}{
\itemize{
\item \code{nfft_1d}: 

\item \code{nfft_adjoint_1d}: 

\item \code{ndft_adjoint_1d}: 
}}

\examples{
set.seed(20190722)
x <- runif(19) - 0.5
#f_hat <- runif(14) + 1i*runif(14)
f_hat = 1:14
for(i in 1:14) f_hat[i] = runif(1)*1i + runif(1)

ndft_1d(x, f_hat)
nfft_1d(x, f_hat)
f <- nfft_1d(x, f_hat)
nfft_adjoint_1d(x,f,14)
ndft_adjoint_1d(x,f,14)

}
\references{
Keiner, J., Kunis, S., and Potts, D. ''Using NFFT 3 - a software
    library for various nonequispaced fast Fourier transforms'' ACM Trans.
    Math. Software,36, Article 19, 1-30, 2009.
}
\author{
Geoffrey Z. Thompson
}
